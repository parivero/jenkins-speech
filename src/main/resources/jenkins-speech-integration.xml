<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-http="http://www.springframework.org/schema/integration/http"
       xmlns:int-groovy="http://www.springframework.org/schema/integration/groovy"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-2.2.xsd
		http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http-2.2.xsd
                http://www.springframework.org/schema/integration/groovy http://www.springframework.org/schema/integration/groovy/spring-integration-groovy.xsd">
    
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jenkins-speech.properties"/>
    </bean>
    
    <!-- Lo utilizo como cron para ejecutar el gateway -->
    <int:inbound-channel-adapter id="gatewayTrigger"
                                 channel="requestChannel" 
                                 expression="new java.util.Date() +' - Request Jenkins' ">
        <int:poller cron="${trigger.request.cron}"/>
    </int:inbound-channel-adapter>
    
    <!-- Canal que dispara la petición a Jenkins -->
    <int:channel id="requestChannel">
        <int:interceptors>
            <int:wire-tap channel="logger"/>
        </int:interceptors>
    </int:channel>
        
    <!-- Factory http -->
    <bean id="requestFactory"
          class="org.springframework.http.client.SimpleClientHttpRequestFactory">
        <property name="connectTimeout" value="${requestFactory.connectTimeout}"/>
        <property name="readTimeout"    value="${requestFactory.readTimeout}"/>
    </bean>
    
    <!-- Gateway que se encarga de obterner la información de Jenkins -->
    <int-http:outbound-gateway id="jenkinsGateway"
                               request-channel="requestChannel"
                               url="${jenkins.url.home}/api/json?tree=jobs[name,lastBuild[name,building,result,timestamp,duration]]"
                               http-method="GET"
                               expected-response-type="java.lang.String"
                               charset="UTF-8"
                               request-factory="requestFactory"
                               reply-channel="jobsChannel">
    </int-http:outbound-gateway>
    
    <!-- Canal que contiene el response de Jenkins -->
    <int:channel id="jobsChannel">
        <int:interceptors>
            <int:wire-tap channel="loggerJson"/>
        </int:interceptors>
    </int:channel>
        
    <!-- Cadena de transformadores y filtros  -->
    <int:chain input-channel="jobsChannel" output-channel="voiceServiceChannel">
        <!-- Transforma el string en un objeto en el payloas -->
        <int:transformer expression="new groovy.json.JsonSlurper().parseText(payload)"/>
        <!--<int:json-to-object-transformer type="com.parivero.jenkins.speech.domain.Response" />-->
        <!-- Obtengo la colección de jobs -->
        <int:splitter expression="payload.jobs"/>
        <!-- A partir de aqui se procesan los jobs uno a uno -->
        <!-- Proceso solo los jobs activos -->
        <int:filter expression="payload.lastBuild != null"/>
        <!-- Proceso solo la ejecuciones recientes -->
        <int:filter 
            expression="payload.lastBuild.timestamp + payload.lastBuild.duration &gt;= (T(java.lang.System).currentTimeMillis()  - ${trigger.request.fixedRate})"/>
        <!--Script Groovy encargado de armar el mensaje.--> 
        <int:transformer>                     
            <int-groovy:script location="classpath:${transformer.groovy.script}"/>
        </int:transformer>
    </int:chain>
    
    <!--Servicio que convierte el texto en audio medinate google translator-->
    <int:service-activator input-channel="voiceServiceChannel" ref="voiceService" method="talk"/>
    
    <bean id="voiceService" class="com.parivero.jenkins.speech.service.VoiceService">
        <property name="language" value="${jenkins.speech.language}"/>
    </bean>

    <!-- logger -->
    <int:logging-channel-adapter id="logger" log-full-message="true" level="INFO"/>
    
    <!-- logger que imprime el json de manera legible -->
    <int:logging-channel-adapter id="loggerJson" expression="new groovy.json.JsonOutput().prettyPrint(payload)" level="DEBUG"/>    
    
</beans>
